set tabstop=2
set softtabstop=2
set shiftwidth=2
set noautochdir

" Remap leader to space
nnoremap <Space> <nop>
let mapleader = "\<Space>"

nnoremap <leader>o :CtrlP<CR>

" Split buffers vertically
nnoremap <leader>w <C-w>v<C-w>l 

" Easier split navigation
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" More natural split opening
set splitbelow
set splitright

" Jump forward or backward with s
nmap s <Plug>(easymotion-s)

" Copy and paste to system clipboard
vmap <Leader>y "+y
vmap <Leader>d "+d
nmap <Leader>p "+p
nmap <Leader>P "+P
vmap <Leader>p "+p
vmap <Leader>P "+P

" Fast region expanding
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)

" Have CtrlP use silversearcher or git
let g:ctrlp_use_caching = 0
if executable('/usr/bin/ag')
  set grepprg=/usr/bin/ag\ --nogroup\ --nocolor
  let g:ctrlp_user_command = '/usr/bin/ag %s -l --nocolor -g ""'
else
  let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files . -co --exclude-standard', 'find %s -type f']
  let g:ctrlp_prompt_mappings = {
    \ 'AcceptSelection("e")': ['<space>', '<cr>', '<2-LeftMouse>'],
    \ }
endif

" Toogle Gundo
nnoremap <F2> :GundoToggle<CR>

" Set some Gundo magic
let g:gundo_width = 40
let g:gundo_right = 1

" Don't show the bufferline in the command bar
let g:bufferline_echo = 0

let g:gist_clip_command = 'xclip -selection clipboard'
let g:gist_detect_filetype = 1
let g:gist_post_private = 1

set relativenumber

" RAINBOWS!
let g:rainbow_active = 1
